# Payment Service Configuration
server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: payment-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/payment_db
    username: admin
    password: admin123
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: payment-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "payment-completed:com.example.payment.event.PaymentCompletedEvent"

# Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true

# Logging Configuration
logging:
  level:
    com.example.payment: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"

# Application Properties
app:
  kafka:
    topics:
      payment-completed: payments.completed
      payment-failed: payments.failed
      payment-refunded: payments.refunded

# Payment Gateway Configuration (Mock)
payment:
  gateway:
    provider: mock
    timeout: 30s
    retry:
      max-attempts: 3
      delay: 1s

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/payment_db
  kafka:
    bootstrap-servers: kafka:9092
